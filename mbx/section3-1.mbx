<section xml:id="s_intro_intro">
<title>Introduction</title>
<p>
There are three principal themes to our course:
</p>

<ul>
<li class="custom-list-style-type" label="Discrete Structures" >Graphs, digraphs, networks, designs, posets, 
strings, patterns, distributions, coverings, and partitions.</li>
<li class="custom-list-style-type" label="Enumeration" >Permutations, combinations, inclusion/exclusion, 
generating functions, recurrence relations, and P&#xf3;lya counting.</li>
<li class="custom-list-style-type" label="Algorithms and Optimization" >Sorting, spanning trees, shortest 
paths, eulerian circuits, hamiltonian cycles, graph coloring, 
planarity testing, network flows, bipartite matchings, and chain partitions.</li>
</ul>

<p>
To illustrate the accessible, concrete nature of combinatorics and to
motivate topics that we will study, this preliminary chapter provides
a first look at combinatorial problems, choosing examples from
enumeration, graph theory, number theory, and optimization. The
discussion is very informal&#8202;&#x2014;&#8202;but this should serve to explain why we
have to be more precise at later stages. We ask lots of questions,
but at this stage, you'll only be able to answer a few. Later, you'll
be able to answer many more <ddots /> but as promised earlier, most likely
you'll never be able to answer them all. And if we're wrong in making
that statement, then you're certain to become <em>very</em> famous.
Also, you'll get an A<m>++</m> in the course and maybe even a Ph.D. too.
</p>
</section>
